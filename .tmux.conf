# initial setup

#set -g default-terminal screen-256color
set -g status-keys vi

# Prefix
set-option -g prefix C-j
unbind-key C-j
bind-key C-j send-prefix

# General
set -g base-index 1
set-window-option -g pane-base-index 1
set -s escape-time 0

# Shortcuts
bind-key r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded..."

# Lengthen the time status messages are shown
set-option -g display-time 2000
set-option -g display-panes-time 3000

# Automatically set window title

set-window-option -g automatic-rename on
set-option -g set-titles on


# Key bindings for copy-paste

setw -g mode-keys vi
unbind p
unbind y
unbind v
unbind [
unbind %
unbind Escape
bind p paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "xsel -i -b"
bind-key -n C-y run "tmux save - | xsel -i -b >/dev/null 2>&1"\; display-message "Buffer copied to Clipboard..."
bind-key Escape copy-mode 
set-option -g renumber-windows on


# window activity monitor

setw -g monitor-activity on
set -g visual-activity on

# Set easier window split keys


bind-key | split-window -h
bind-key - split-window -v

# Use Alt Arrow keys to be used to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# Shift arrow keys to switch Windows
bind -n S-Left previous-window
bind -n S-Right next-window

# Double press <prefix> to move to last window
bind-key C-j last-window

# No delay for escape key press 
# set -sg escape-time 0

# mouse mode:
set -g mouse on

#################################### VISUALS ###############3

###############################################################################
############# Date/Time values that can be displayed in the status line
###############################################################################

# $(echo $USER) - shows the current username
# %a --> Day of week (Mon)
# %A --> Day of week Expanded (Monday)

# %b --> Month (Jan)
# %d --> Day (31)
# %Y --> Year (2017)

# %D --> Month/Day/Year (12/31/2017)
# %v --> Day-Month-Year (31-Dec-2017)

# %r --> Hour:Min:Sec AM/PM (12:30:27 PM)
# %T --> 24 Hour:Min:Sec (16:30:27)
# %X --> Hour:Min:Sec (12:30:27)
# %R --> 24 Hour:Min (16:30)
# %H --> 24 Hour (16)
# %l --> Hour (12)
# %M --> Mins (30)
# %S --> Seconds (09)
# %p --> AM/PM (AM)

# For a more complete list view: https://linux.die.net/man/3/strftime

###############################################################################
############# Settings
###############################################################################

# Refresh status line every 5 seconds
set -g status-interval 10

# Start window and pane indices at 1.
set -g base-index 1
set -g pane-base-index 1

# length of tmux status line
# set -g status-left-length 30
# set -g status-right-length 150

# Make active pane border blue
set -g pane-active-border-fg colour4

#Set the left and right status
# set -g status-left '#[bg=colour7]#[fg=colour0]#{?client_prefix,#[bg=colour2],} ‚ùê #S #[bg=colour8]#[fg=colour7]#{?client_prefix,#[fg=colour2],}ÓÇ∞#{?window_zoomed_flag, üîç ,}#[fg=colour1]  ‚ô• #(upower -i $(upower -e | grep "/battery") | grep --color=never -E percentage|xargs|cut -d" " -f2 )'
# set -g status-right '#[fg=colour2]#(echo "scale=2;$(cut -d" " -f1 /proc/uptime) / 3600" |bc) #[fg=colour1]‚ÆÉ #[fg=colour4]ÓÇ≤#[bg=colour4]#[fg=colour0] #(~/dotfiles/scripts/perf.sh) #[bg=colour4]#[fg=colour7]ÓÇ≤#[bg=colour7]#[fg=colour0] %b %d %H:%M '

set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/github/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/github/tmux-powerline/powerline.sh right)"

# Set the background color
set -g status-bg colour8
# if-shell -b ' [ $(tmux show-option -qv key-table) = "off" ] ' "set -g status-bg colour118"
#colour0 (black)
#colour1 (red)
#colour2 (green)
#colour3 (yellow)
#colour4 (blue)
#colour7 (white)
#colour5 colour6 colour7 colour8 colour9 colour10 colour11 colour12 colour13 colour14 colour15 colour16 colour17

#D ()
#F ()
#H (hostname)
#I (window index)
#P()
#S (session index)
#T (pane title)
#W (currnet task like vim if editing a file in vim or zsh if running zsh)

# customize how windows are displayed in the status line

set -g window-status-current-format "#[fg=colour8]#[bg=colour4]ÓÇ∞#[fg=colour8]#[bg=colour4] #I* ÓÇ±#[fg=colour8] #W #[fg=colour4]#[bg=colour8]ÓÇ∞"
set -g window-status-format "#[fg=colour8]#[bg=colour240]ÓÇ∞#[fg=colour240]#[bg=colour240]#I#[fg=colour7] ÓÇ± #W #[fg=colour240]#[bg=colour8]ÓÇ∞"
####################### NESTING TMUX STUFF ###############
########################################################

#  set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
#  set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
# set window-status-format "#[fg=colour5]#[bg=colour24]ÓÇ∞#[fg=colour24]#[bg=colour24]#I#[fg=colour4] ÓÇ± #W #[fg=colour24]#[bg=colour5]ÓÇ∞" \;\
bind -T root F12  \
  display-message "set" \;\
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=colour3,bg=colour34" \;\
  set window-status-current-format "#[fg=colour5]#[bg=colour1]ÓÇ∞#[fg=colour5]#[bg=colour1] #I* ÓÇ±#[fg=colour5] #W #[fg=colour1]#[bg=colour5]ÓÇ∞" \;\
  set window-status-current-style "fg=colour5,bold,bg=colour4" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S 

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S
  
# wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

#set -g status-right "$wg_is_keys_off #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_loadavg} | $wg_user_host"

##################################### Create the Session ##############################

# create session if not existing, otherwise attach to main
#new-session -AD -s main

set-hook -g session-window-changed 'refresh-client -S'



